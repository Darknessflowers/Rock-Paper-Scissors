{"version":3,"sources":["scripts.js"],"names":["paper","document","querySelector","scissors","rock","game","gameChoice","querySelectorAll","score","scoreNum","chosen","compChoice","moves","wait","ms","Promise","resolve","setTimeout","randomNum","min","max","Math","floor","random","changeScore","change","innerText","compMove","yourChoice","compNum","console","warn","resultsTransition","classList","add","log","forEach","choice","contains","compareMove","result","handleClick","event","currentTarget","id","addEventListener"],"mappings":"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","file":"scripts.b71a6038.js","sourceRoot":"..","sourcesContent":["const paper = document.querySelector('#paper');\nconst scissors = document.querySelector('#scissors');\nconst rock = document.querySelector('#rock');\nconst game = document.querySelector('#game');\nconst gameChoice = document.querySelectorAll('.choice');\nconst score = document.querySelector('.scoreNum');\nlet scoreNum = 0;\nlet chosen;\n\nlet compChoice;\nconst moves = {\n  // Your move\n  scissors: {\n    // Comp move\n    rock: 'lose',\n    paper: 'win',\n    scissors: 'tie',\n  },\n  // Your move\n  rock: {\n    // Comp move\n    rock: 'tie',\n    paper: 'lose',\n    scissors: 'win',\n  },\n  // Your move\n  paper: {\n    // Comp move\n    rock: 'win',\n    paper: 'tie',\n    scissors: 'lose',\n  },\n};\n\nfunction wait(ms = 0) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n// TODO: computer move function\n// generates num from 1 to 3. Returns rock/paper/scissors based on that\nfunction randomNum(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nfunction changeScore(change) {\n  if (change === 'increase') {\n    scoreNum += 1;\n  } else if (change === 'decrease') {\n    scoreNum -= 1;\n  }\n  score.innerText = scoreNum;\n}\nfunction compMove(yourChoice) {\n  const compNum = randomNum(1, 3);\n  switch (compNum) {\n    case 1:\n      compChoice = 'rock';\n      break;\n    case 2:\n      compChoice = 'paper';\n      break;\n    case 3:\n      compChoice = 'scissors';\n      break;\n    default:\n      console.warn('Invalid num from comp');\n      break;\n  }\n  return compChoice;\n}\n\nasync function resultsTransition() {\n  // TODO\n  await wait(1000);\n  //* remove background on game\n  game.classList.add('noBg');\n  console.log('waited');\n  //* add hidden class to choices that weren't selected\n  gameChoice.forEach(choice => {\n    if (!choice.classList.contains('picked')) {\n      choice.classList.add('hidden');\n    }\n  });\n  //* wait\n  await wait(500);\n  //* add hidden class to game\n  game.classList.add('hidden');\n  //! bonus\n  //* move selected choice to position of results\n}\n\n// compares option player clicked against what computer picked\n// return whoincrease score\nfunction compareMove(yourChoice) {\n  compMove(yourChoice);\n  const result = moves[yourChoice][compChoice];\n  console.log(\n    `You chose ${yourChoice} and the computer chose ${compChoice}. You ${result}`\n  );\n  if (result === 'win') {\n    changeScore('increase');\n  } else if (result === 'lose') {\n    changeScore('decrease');\n  }\n  // wait a few seconds\n\n  // call results\n  resultsTransition();\n}\n\nfunction handleClick(event) {\n  event.currentTarget.classList.add('picked');\n  compareMove(event.currentTarget.id);\n  // yourChoice = event.currentTarget;\n  // console.log(yourChoice);\n}\n// compareMove('scissors');\n// TODO: increase score function\n\ngameChoice.forEach(choice => choice.addEventListener('click', handleClick));\n"]}